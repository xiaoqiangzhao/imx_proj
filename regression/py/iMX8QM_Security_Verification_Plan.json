{"scu_sec_wdog": [{"vec": "scu_sec_wdog", "pat": "scu_sec_wdog_0_backup_reset", "groups": "default_scu", "soc_arg": null, "user": "b48029", "priority": 0, "glv": null, "review": null, "desc": "Legacy WDOG Patterns description to be filled"}, {"vec": "scu_sec_wdog", "pat": "scu_sec_wdog_0_clock_switch", "groups": "default_scu", "soc_arg": null, "user": "b48029", "priority": 0, "glv": null, "review": null, "desc": "Legacy WDOG Patterns description to be filled"}, {"vec": "scu_sec_wdog", "pat": "scu_sec_wdog_0_disable", "groups": "default_scu", "soc_arg": null, "user": "b48029", "priority": 0, "glv": null, "review": null, "desc": "Legacy WDOG Patterns description to be filled"}, {"vec": "scu_sec_wdog", "pat": "scu_sec_wdog_0_int", "groups": "default_scu", "soc_arg": null, "user": "b48029", "priority": 0, "glv": null, "review": null, "desc": "Legacy WDOG Patterns description to be filled"}, {"vec": "scu_sec_wdog", "pat": "scu_sec_wdog_0_in_test_mode", "groups": "default_scu", "soc_arg": null, "user": "b48029", "priority": 0, "glv": null, "review": null, "desc": "Legacy WDOG Patterns description to be filled"}, {"vec": "scu_sec_wdog", "pat": "scu_sec_wdog_0_ips_err", "groups": "default_scu", "soc_arg": null, "user": "b48029", "priority": 0, "glv": null, "review": null, "desc": "Legacy WDOG Patterns description to be filled"}, {"vec": "scu_sec_wdog", "pat": "scu_sec_wdog_0_reg", "groups": "default_scu", "soc_arg": null, "user": "b48029", "priority": 0, "glv": null, "review": null, "desc": "Legacy WDOG Patterns description to be filled"}, {"vec": "scu_sec_wdog", "pat": "scu_sec_wdog_0_reset", "groups": "default_scu", "soc_arg": null, "user": "b48029", "priority": 0, "glv": null, "review": null, "desc": "Legacy WDOG Patterns description to be filled"}, {"vec": "scu_sec_wdog", "pat": "scu_sec_wdog_0_stop", "groups": "default_scu", "soc_arg": null, "user": "b48029", "priority": 0, "glv": null, "review": null, "desc": "Legacy WDOG Patterns description to be filled"}, {"vec": "scu_sec_wdog", "pat": "scu_sec_wdog_0_test", "groups": "default_scu", "soc_arg": null, "user": "b48029", "priority": 0, "glv": null, "review": null, "desc": "Legacy WDOG Patterns description to be filled"}, {"vec": "scu_sec_wdog", "pat": "scu_sec_wdog_0_unlk_refresh", "groups": "default_scu", "soc_arg": null, "user": "b48029", "priority": 0, "glv": null, "review": null, "desc": "Legacy WDOG Patterns description to be filled"}, {"vec": "scu_sec_wdog", "pat": "scu_sec_wdog_0_wait", "groups": "default_scu", "soc_arg": null, "user": "b48029", "priority": 0, "glv": null, "review": null, "desc": "Legacy WDOG Patterns description to be filled"}, {"vec": "scu_sec_wdog", "pat": "scu_sec_wdog_0_window", "groups": "default_scu", "soc_arg": null, "user": "b48029", "priority": 0, "glv": null, "review": null, "desc": "Legacy WDOG Patterns description to be filled"}], "scu_sec_romcp": [{"vec": "scu_sec_romcp", "pat": "sec_romcp_reg_config_test", "groups": "default_scu", "soc_arg": null, "user": "b48029", "priority": 0, "glv": null, "review": null, "desc": "Register read/write and compare patterrns"}, {"vec": "scu_sec_romcp", "pat": "sec_romcp_data_fixing_test", "groups": "default_scu", "soc_arg": null, "user": "b48029", "priority": 0, "glv": null, "review": null, "desc": "ROMCP patching of the data from the ROM with the configured values"}, {"vec": "scu_sec_romcp", "pat": "sec_romcp_opcode_patch_test", "groups": "default_scu", "soc_arg": null, "user": "b48029", "priority": 0, "glv": null, "review": null, "desc": "ROMCP patching of the opcode  from the ROM with the configured values"}, {"vec": "scu_sec_romcp", "pat": "sec_romcp_sys_64k_mem_access_0", "groups": "default_scu", "soc_arg": null, "user": "b48029", "priority": 0, "glv": null, "review": null, "desc": "ROM Access to 64K"}], "scu_sec_m4_acc": [{"vec": "scu_sec_m4_acc", "pat": "scu_security_m4core_access", "groups": "default_scu", "soc_arg": null, "user": "b48029", "priority": 0, "glv": null, "review": null, "desc": "Access to the slaves in Security Modules mapped to  NIC (M0 \u2013 External In)"}, {"vec": "scu_sec_m4_acc", "pat": "scu_security_m4core_secoramaccess", "groups": "default_scu", "soc_arg": null, "user": "b48029", "priority": 0, "glv": null, "review": null, "desc": "Access to the SECO RAM regions in the Security SS from the M4 Core"}, {"vec": "scu_sec_m4_acc", "pat": "scu_security_secure_ram_access", "groups": "default_scu", "soc_arg": null, "user": "b48029", "priority": 0, "glv": null, "review": null, "desc": "Access to the SECURE RAM regions in the Security SS from the M4 Core"}, {"vec": "scu_sec_m4_acc", "pat": "scu_security_caam_mgr_pge", "groups": "default_scu", "soc_arg": null, "user": "b48029", "priority": 0, "glv": null, "review": null, "desc": "Access to the CAAM Manager Page may be redundant"}, {"vec": "scu_sec_m4_acc", "pat": "scu_security_jobring", "groups": "default_scu", "soc_arg": null, "user": "b48029", "priority": 0, "glv": null, "review": null, "desc": "Access to the CAAM Job ring may be redundant"}, {"vec": "scu_sec_m4_acc", "pat": "scu_security_caam_debug", "groups": "default_scu", "soc_arg": null, "user": "b48029", "priority": 0, "glv": null, "review": null, "desc": "Access to the CAAM debug may be redundant"}, {"vec": "scu_sec_m4_acc", "pat": "scu_security_all_caam_regions.", "groups": "default_scu", "soc_arg": null, "user": "b48029", "priority": 0, "glv": null, "review": null, "desc": "Access to the All Caam may be redundant"}, {"vec": "scu_sec_m4_acc", "pat": "scu_security_resv_regions", "groups": "default_scu", "soc_arg": null, "user": "b48029", "priority": 0, "glv": null, "review": null, "desc": "Access to all reserved regions in the Security SS ( Mapped to M0 External Master ) Expect Abort"}], "sec_hdmi_rx": [{"vec": "sec_hdmi_rx", "pat": "sec_hdmirx_apbmux_sel", "groups": "default_dc", "soc_arg": null, "user": "b54489", "priority": 0, "glv": null, "review": null, "desc": "Check that apbmux sel is functional, access hdmi ram with Seco"}, {"vec": "sec_hdmi_rx", "pat": "sec_hdmirx_secure_mode", "groups": "default_dc", "soc_arg": null, "user": "b54489", "priority": 0, "glv": null, "review": null, "desc": "Check secure mode feature"}, {"vec": "sec_hdmi_rx", "pat": "sec_hdmirx_send_keys", "groups": "default_dc", "soc_arg": null, "user": "b54489", "priority": 0, "glv": null, "review": null, "desc": "Check that SECO is able to write keys to HDMI controller mailbox. Need to check all kind of keys"}, {"vec": "sec_hdmi_rx", "pat": "sec_hdmirx_security_violation", "groups": "default_dc", "soc_arg": null, "user": "b54489", "priority": 0, "glv": null, "review": null, "desc": "Check that HDMI is impacted when security violation occurred. Fail state should reset the HDMI controller which erases keys. SECO to zeroize after reset"}, {"vec": "sec_hdmi_rx", "pat": "sec_hdmirx_keys_lock_down", "groups": "default_dc", "soc_arg": null, "user": "b54489", "priority": 0, "glv": null, "review": null, "desc": "Prevent modification by other software in the chip. "}, {"vec": "sec_hdmi_rx", "pat": "sec_hdmirx_disable_crypto_by_fuse", "groups": "default_dc", "soc_arg": null, "user": "b54489", "priority": 0, "glv": null, "review": null, "desc": "check disable crypto impacto (by fuse)"}, {"vec": "sec_hdmi_rx", "pat": "sec_hdmirx_disable_crypto_by_sw", "groups": "default_dc", "soc_arg": null, "user": "b54489", "priority": 0, "glv": null, "review": null, "desc": "check disable crypto impacto (by sw). TO CONFIRM"}, {"vec": "sec_hdmi_rx", "pat": "sec_hdmirx_boot_process", "groups": "default_dc", "soc_arg": null, "user": "b54489", "priority": 1, "glv": null, "review": null, "desc": "Check all boot process steps"}], "scu_sec_caam": [{"vec": "scu_sec_caam", "pat": "scu_caam_reg", "groups": "default_scu", "soc_arg": null, "user": "b54489", "priority": 0, "glv": null, "review": null, "desc": "Register test from SCU. Check all CAAM pages"}, {"vec": "scu_sec_caam", "pat": "seco_caam_reg", "groups": "default_scu", "soc_arg": null, "user": "b54489", "priority": 0, "glv": null, "review": null, "desc": "Register test from SECO. Check that non MID fails to access to manager page, RTIC, DECO"}, {"vec": "scu_sec_caam", "pat": "scu_caam_secure_ram_access", "groups": "default_scu", "soc_arg": null, "user": "b54489", "priority": 0, "glv": null, "review": null, "desc": "Access to secure ram from SCU.Partition owned JR, Allocate partition, access r/w to secure RAM"}, {"vec": "scu_sec_caam", "pat": "seco_caam_secure_ram_access", "groups": "default_scu", "soc_arg": null, "user": "b54489", "priority": 0, "glv": null, "review": null, "desc": "Access to secure ram from SECO.Partition owned JR, Allocate partition, access r/w to secure RAM. Check that SCU is able to set a JR to another DID"}, {"vec": "scu_sec_caam", "pat": "scu_caam_secure_blob_ddr", "groups": "default_scu", "soc_arg": null, "user": "b54489", "priority": 0, "glv": null, "review": null, "desc": "Check that DMA CAAM can access DDR"}, {"vec": "scu_sec_caam", "pat": "scu_caam_secure_blob_seco_ram", "groups": "default_scu", "soc_arg": null, "user": "b54489", "priority": 0, "glv": null, "review": null, "desc": "Check that DMA CAAM can access seco ram"}, {"vec": "scu_sec_caam", "pat": "scu_caam_secure_blob_ocram", "groups": "default_lsio", "soc_arg": null, "user": "b54489", "priority": 0, "glv": null, "review": null, "desc": "Check that DMA CAAM can access ocram"}, {"vec": "scu_sec_caam", "pat": "scu_caam_secure_blob_hdmi", "groups": "default_imaging", "soc_arg": null, "user": "b54489", "priority": 2, "glv": null, "review": null, "desc": "Check that DMA CAAM can access hdmi ram. Back-up path"}, {"vec": "scu_sec_caam", "pat": "seco_caam_secure_blob_seco_ram", "groups": "default_scu", "soc_arg": null, "user": "b54489", "priority": 0, "glv": null, "review": null, "desc": "Check that DMA CAAM can access seco ram. Configuration is done by the SECO"}, {"vec": "scu_sec_caam", "pat": "scu_caam_int", "groups": "default_scu", "soc_arg": null, "user": "b54489", "priority": 0, "glv": null, "review": null, "desc": "Check all CAAM JR IRQs for SCU"}, {"vec": "scu_sec_caam", "pat": "scu_caam_rec_err_int", "groups": "default_scu", "soc_arg": null, "user": "b54489", "priority": 0, "glv": null, "review": null, "desc": "Check CAAM DMA wrong address access. Cover CAAM_ERROR IRQ for SCU"}, {"vec": "scu_sec_caam", "pat": "scu_caam_access_no_slave", "groups": "default_scu", "soc_arg": null, "user": "b54489", "priority": 2, "glv": null, "review": null, "desc": "Confirm that no connection to access s0 and s1."}, {"vec": "scu_sec_caam", "pat": "seco_caam_int", "groups": "default_scu", "soc_arg": null, "user": "b54489", "priority": 0, "glv": null, "review": null, "desc": "Check all CAAM JR IRQs for SECO"}, {"vec": "scu_sec_caam", "pat": "seco_caam_did_manager_without_permission", "groups": "default_scu", "soc_arg": null, "user": "b54489", "priority": 0, "glv": null, "review": null, "desc": "Check CAAM DMA with DID='1 without permission. Cover CAAM_ERROR IRQ for SECO"}, {"vec": "scu_sec_caam", "pat": "ca53_0_caam_int", "groups": "ap_default_ca53", "soc_arg": null, "user": "b54489", "priority": 0, "glv": null, "review": null, "desc": "Check all JRs CAAM IRQs from DBLOG. "}, {"vec": "scu_sec_caam", "pat": "scu_caam_smc_security_parameters", "groups": "default_scu", "soc_arg": null, "user": "b54489", "priority": 0, "glv": null, "review": null, "desc": "Reused from ULP. Check PSP and CSP features"}, {"vec": "scu_sec_caam", "pat": "scu_caam_smc_security_permissions", "groups": "default_scu", "soc_arg": null, "user": "b54489", "priority": 0, "glv": null, "review": null, "desc": "Check DID, SDID permissions"}, {"vec": "scu_sec_caam", "pat": "scu_caam_smc_nonsecure_access", "groups": "default_scu", "soc_arg": null, "user": "b54489", "priority": 0, "glv": null, "review": null, "desc": "Check NS permissions"}, {"vec": "scu_sec_caam", "pat": "seco_caam_snvs_master_key", "groups": "default_scu", "soc_arg": null, "user": "b54489", "priority": 0, "glv": null, "review": null, "desc": "Check snvs_master_keys connection. Check OTP fuse value Load ZMK and use it as master key"}, {"vec": "scu_sec_caam", "pat": "scu_caam_generate_zmk_to_snvs", "groups": "default_scu", "soc_arg": null, "user": "b54489", "priority": 0, "glv": null, "review": null, "desc": "Check RNG intf. CAAM to generate ZMK through RNG bus"}, {"vec": "scu_sec_caam", "pat": "scu_caam_zeroize_keys_on_fail", "groups": "default_scu", "soc_arg": null, "user": "b54489", "priority": 0, "glv": null, "review": null, "desc": "when violation, keys are zeroized  - Reused from ULP1"}, {"vec": "scu_sec_caam", "pat": "scu_caam_rng_selftest", "groups": "default_scu", "soc_arg": null, "user": "b54489", "priority": 1, "glv": null, "review": null, "desc": "self test for RNG - Reused from ULP1"}, {"vec": "scu_sec_caam", "pat": "seco_caam_smc_encrypt_cbc_secret_key", "groups": "default_scu", "soc_arg": null, "user": "b54489", "priority": 1, "glv": null, "review": null, "desc": "Encrypt job -  Reused from ULP1"}, {"vec": "scu_sec_caam", "pat": "seco_caam_encryption_disable_fuse", "groups": "default_scu", "soc_arg": null, "user": "b54489", "priority": 1, "glv": null, "review": null, "desc": "Check that input signal fuse_disable_encryption is connected. Reused encrypt tc and disable encryption by fuse. Check error. "}, {"vec": "scu_sec_caam", "pat": "seco_caam_encryption_disable_sw", "groups": "default_scu", "soc_arg": null, "user": "b54489", "priority": 1, "glv": null, "review": null, "desc": "Check that input signal fuse_disable_encryption is connected. Reused encrypt tc and disable encryption by sw. Check error. "}, {"vec": "scu_sec_caam", "pat": "seco_caam_rtic", "groups": "default_scu", "soc_arg": null, "user": "b54489", "priority": 1, "glv": null, "review": null, "desc": "check rtic feature. Multi core test. Check RTIC IRQ for SECO and SCU."}, {"vec": "scu_sec_caam", "pat": "ca53_0_caam_rtic", "groups": "ap_default_ca53", "soc_arg": null, "user": "b54489", "priority": 1, "glv": null, "review": null, "desc": "Check RTIC IRQ through DBLOG. Use CA53_0"}, {"vec": "scu_sec_caam", "pat": "seco_caam_rtic_sec_vio", "groups": "default_scu", "soc_arg": null, "user": "b54489", "priority": 1, "glv": null, "review": null, "desc": "check rtic failure. Caam to send a sec vio to SNVS. Set a SEC VIO IRQ to cores. "}, {"vec": "scu_sec_caam", "pat": "seco_caam_rtic_sec_vio_adm", "groups": "default_scu", "soc_arg": null, "user": "b54489", "priority": 1, "glv": null, "review": null, "desc": "check rtic failure. Caam to send a sec vio to ADM. ADM to enable the violation SEC VIO IRQ to cores. Use ADM violation"}, {"vec": "scu_sec_caam", "pat": "seco_caam_lockout_ro_seco_did", "groups": "default_scu", "soc_arg": null, "user": "b54489", "priority": 1, "glv": null, "review": null, "desc": "Check that CAAM DMA can access seco ram when LOCKOUT_READ_ONLY_SECO_DID is set in ADM"}, {"vec": "scu_sec_caam", "pat": "caam_rtic_fail_when_low_power", "groups": "default_scu", "soc_arg": null, "user": "b54489", "priority": 2, "glv": null, "review": null, "desc": "RTIC is a good candidate for low power"}, {"vec": "scu_sec_caam", "pat": "seco_caam_sfp_secret", "groups": "default_scu", "soc_arg": null, "user": "b54489", "priority": 1, "glv": null, "review": null, "desc": "Check only connection from fuses to CAAM. Need to figure out functional purpose"}, {"vec": "scu_sec_caam", "pat": "caam_clock_gating", "groups": "default_scu", "soc_arg": null, "user": "b54489", "priority": 1, "glv": null, "review": null, "desc": "Stop mode/Gate clock. Use for lowpower - SCU DSC gprctrl_r[54] - Stop mode - SCU DSC gprctrl_r[55] "}, {"vec": "scu_sec_caam", "pat": "caam_clock_gating_inhibit", "groups": "default_scu", "soc_arg": null, "user": "b54489", "priority": 1, "glv": null, "review": null, "desc": "Inhibit Gate off. Use for lowpower - SCU DSC gprctrl_ss[50]"}, {"vec": "scu_sec_caam", "pat": "caam_stop_inhibit", "groups": "default_scu", "soc_arg": null, "user": "b54489", "priority": 1, "glv": null, "review": null, "desc": "Inhibit stop mode - SCU DSC gprctrl_ss[49] "}, {"vec": "scu_sec_caam", "pat": "caam_multicore_jr", "groups": "default_scu", "soc_arg": null, "user": "b54489", "priority": 2, "glv": null, "review": null, "desc": "Use cases when several cores program different JR"}, {"vec": "scu_sec_caam", "pat": "caam_seco_ram_usecase", "groups": "default_scu", "soc_arg": null, "user": "b54489", "priority": 2, "glv": null, "review": null, "desc": "Try to load firmware in seco RAM form external. needed for seco boot.Signature? Loading process?"}], "sec_jtagc": [{"vec": "sec_jtagc", "pat": "jtagc_challenge_response", "groups": "default_scu", "soc_arg": null, "user": "b48029", "priority": 0, "glv": null, "review": null, "desc": "JTAGC Challenge Response Feature where there is no JTAG/TZAC Match"}, {"vec": "sec_jtagc", "pat": "jtag_challenge_success", "groups": "default_scu", "soc_arg": null, "user": "b48029", "priority": 0, "glv": null, "review": null, "desc": "JTAGC Challenge and response where JTAGC succeeds in match forcing keys for now"}, {"vec": "sec_jtagc", "pat": "jtagc_disable_adm", "groups": "default_scu", "soc_arg": null, "user": "b48029", "priority": 0, "glv": null, "review": null, "desc": "Verify the sjc_disable func_sec_lock deasserts the jtagc tap enable"}, {"vec": "sec_jtagc", "pat": "jtagc_challenge_response_adm_dis", "groups": "default_scu", "soc_arg": null, "user": "b48029", "priority": 0, "glv": null, "review": null, "desc": "Verify the Challenge response disabled congif"}], "sec_adm": [{"vec": "sec_adm", "pat": "sec_adm_gpr_all_ctrl_config_cross_acc", "groups": "default_scu", "soc_arg": null, "user": "b48029", "priority": 0, "glv": null, "review": null, "desc": "Verify the data tranfer from SECO to SCU valiating all shared/private wr/rd Enable configurations"}, {"vec": "sec_adm", "pat": "sec_adm_gpr_all_ctrl_config_cross_acc_flav1", "groups": "default_scu", "soc_arg": null, "user": "b48029", "priority": 0, "glv": null, "review": null, "desc": "Verify the data tranfer from SCU to SECO valiating all shared/private wr/rd Enable configurations"}, {"vec": "sec_adm", "pat": "sec_adm_gpr_apbshr_wr_ahbpvt_rd", "groups": "default_scu", "soc_arg": null, "user": "b48029", "priority": 0, "glv": null, "review": null, "desc": "Verify the SCU can write the APB shared GPRS and the SECO can read it via the Private APB"}, {"vec": "sec_adm", "pat": "sec_adm_gpr_pvt_access_dis", "groups": "default_scu", "soc_arg": null, "user": "b48029", "priority": 0, "glv": null, "review": null, "desc": "Verify the access to GPRs are gated with the Enables"}, {"vec": "sec_adm", "pat": "sec_adm_gpr_pvt_all_ctrl_config", "groups": "default_scu", "soc_arg": null, "user": "b48029", "priority": 0, "glv": null, "review": null, "desc": "Verify the ADM PVT GPR control register configurations for SECO"}, {"vec": "sec_adm", "pat": "sec_adm_gpr_pvt_illegal_acc", "groups": "default_scu", "soc_arg": null, "user": "b48029", "priority": 0, "glv": null, "review": null, "desc": "Verify the Access to GPRs without CTRL registers config causes the Illegal status to be set"}, {"vec": "sec_adm", "pat": "sec_adm_gpr_pvt_wr_rd_access", "groups": "default_scu", "soc_arg": null, "user": "b48029", "priority": 0, "glv": null, "review": null, "desc": "Verify simple Wr/RD of AHB PVT GPRS"}, {"vec": "sec_adm", "pat": "sec_adm_gpr_pvt_wr_rd_access_dis", "groups": "default_scu", "soc_arg": null, "user": "b48029", "priority": 0, "glv": null, "review": null, "desc": "Verify simple Wr/RD of AHB PVT GPRS disabled"}, {"vec": "sec_adm", "pat": "sec_adm_gpr_pvt_wr_rd_all_bnks_access", "groups": "default_scu", "soc_arg": null, "user": "b48029", "priority": 0, "glv": null, "review": null, "desc": "Verify all the Instacnes of the GPR 0 to 5 and All Banks on Private"}, {"vec": "sec_adm", "pat": "sec_adm_gpr_shr_access", "groups": "default_scu", "soc_arg": null, "user": "b48029", "priority": 0, "glv": null, "review": null, "desc": "Verify the GPR access via the Shared interface from SCU"}, {"vec": "sec_adm", "pat": "sec_adm_gpr_shr_access_seco", "groups": "default_scu", "soc_arg": null, "user": "b48029", "priority": 0, "glv": null, "review": null, "desc": "Verify the GPR access via the Shared interface from SECO"}, {"vec": "sec_adm", "pat": "sec_adm_gpr_shr_access_seco_dis", "groups": "default_scu", "soc_arg": null, "user": "b48029", "priority": 0, "glv": null, "review": null, "desc": "Verify the GPR access via the Shared interface from SECO without all enbales"}, {"vec": "sec_adm", "pat": "sec_adm_gpr_shr_all_ctrl_config", "groups": "default_scu", "soc_arg": null, "user": "b48029", "priority": 0, "glv": null, "review": null, "desc": "Verify the GPR controls on the Shared interface"}, {"vec": "sec_adm", "pat": "sec_adm_gpr_shr_all_ctrl_config_seco", "groups": "default_scu", "soc_arg": null, "user": "b48029", "priority": 0, "glv": null, "review": null, "desc": "Verify the GPR controls on the Shared interface access from SECO"}, {"vec": "sec_adm", "pat": "sec_adm_gpr_shr_illegal_acc", "groups": "default_scu", "soc_arg": null, "user": "b48029", "priority": 0, "glv": null, "review": null, "desc": "Verify the Illgegal Acces on the Shared interace"}, {"vec": "sec_adm", "pat": "sec_adm_gpr_shr_pvt_access_dis", "groups": "default_scu", "soc_arg": null, "user": "b48029", "priority": 0, "glv": null, "review": null, "desc": "Verify the GPR access via the Shared/Prviate interface from  without all enbales"}, {"vec": "sec_adm", "pat": "sec_adm_gpr_shr_rd_access_dis", "groups": "default_scu", "soc_arg": null, "user": "b48029", "priority": 0, "glv": null, "review": null, "desc": "Verify the GPR shared rd access with controls disables"}, {"vec": "sec_adm", "pat": "sec_adm_gpr_shr_wr_rd_all_bnks_access", "groups": "default_scu", "soc_arg": null, "user": "b48029", "priority": 0, "glv": null, "review": null, "desc": "Verify all Banks via SCU on shraed interface"}, {"vec": "sec_adm", "pat": "sec_adm_gpr_shr_wr_rd_all_bnks_access_seco", "groups": "default_scu", "soc_arg": null, "user": "b48029", "priority": 0, "glv": null, "review": null, "desc": "Verify all Banks via SECO on shared interfcae"}, {"vec": "sec_adm", "pat": "sec_adm_reg", "groups": "default_scu", "soc_arg": null, "user": "b48029", "priority": 0, "glv": null, "review": null, "desc": "Check basic register reads upon reset  on shared"}, {"vec": "sec_adm", "pat": "sec_adm_reg_pvt", "groups": "default_scu", "soc_arg": null, "user": "b48029", "priority": 0, "glv": null, "review": null, "desc": "Check basic register reads upon reset  on private"}, {"vec": "sec_adm", "pat": "sec_adm_sct", "groups": "default_scu", "soc_arg": null, "user": "b48029", "priority": 0, "glv": null, "review": null, "desc": "Verify the SET,CLR,TOGGLE features on GPRs and  Contrls"}, {"vec": "sec_adm", "pat": "sec_adm_scu_ctrl0", "groups": "default_scu", "soc_arg": null, "user": "b48029", "priority": 0, "glv": null, "review": null, "desc": "Verify the ADM control of Coresight Authentication Interface like DBGEN NIDEN etc"}, {"vec": "sec_adm", "pat": "sec_adm_seco_block_rom", "groups": "default_scu", "soc_arg": null, "user": "b48029", "priority": 0, "glv": null, "review": null, "desc": "Verify the ADM config to block the access to SECO ROM"}, {"vec": "sec_adm", "pat": "sec_adm_seco_nmi_exit_rom", "groups": "default_scu", "soc_arg": null, "user": "b48029", "priority": 0, "glv": null, "review": null, "desc": "Verify the Key Unlocking sequence with the NMI Events"}, {"vec": "sec_adm", "pat": "sec_adm_seco_reg", "groups": "default_scu", "soc_arg": null, "user": "b48029", "priority": 0, "glv": null, "review": null, "desc": "Verify the access to registers from SECO after reset"}, {"vec": "sec_adm", "pat": "seco_adm_misc_key_read", "groups": "default_scu", "soc_arg": null, "user": "b48029", "priority": 0, "glv": null, "review": null, "desc": "Verify the ADM can read the dtcp,manufacturing, hcp key etc via the otp fuses into the ADM signal interface and to the ADM registers once key loading state machine succeeds, Checlking at the ADM/Security Boundary , Usecases to validate all the indivdual settings are planned/to be coded"}, {"vec": "sec_adm", "pat": "seco_adm_misc_ctrl", "groups": "default_scu", "soc_arg": null, "user": "b48029", "priority": 0, "glv": null, "review": null, "desc": "Verify the ADM control of CS Authentication,Key Sel etc when the func_secu_lock = seco_active is set"}, {"vec": "sec_adm", "pat": "seco_adm_tz_debug_disable", "groups": "default_scu", "soc_arg": null, "user": "b48029", "priority": 0, "glv": null, "review": null, "desc": "Verify the ADM setting where the APPS Debug is Disabled with the tz_debug_disable fuse"}, {"vec": "sec_adm", "pat": "seco_adm_jtag_smode", "groups": "default_scu", "soc_arg": null, "user": "b48029", "priority": 0, "glv": null, "review": null, "desc": "Verify the ADM setting where the APPS Debug is Disabled with jtag_smod setting"}, {"vec": "sec_adm", "pat": "seco_adm_misc_scu_ctrl", "groups": "default_scu", "soc_arg": null, "user": "b48029", "priority": 0, "glv": null, "review": null, "desc": "Verify the ADM control of SCU CTRL0 registers , Checlking at the ADM/Security Boundary , Usecases to validate all the indivdual settings are planned/to be coded"}, {"vec": "sec_adm", "pat": "sec_adm_sjc_disable_dap", "groups": "default_scu", "soc_arg": null, "user": "b48029", "priority": 0, "glv": null, "review": null, "desc": "Verify the ADM func_secu_lock sjc_disable deasserts debugen goes to SWJDP and blocks it from doing anything"}, {"vec": "sec_adm", "pat": "sec_adm_gltich_detection", "groups": "default_scu", "soc_arg": null, "user": "b48029", "priority": 1, "glv": null, "review": null, "desc": "Verify the ADM glitch detection logic and check when a discrepancy between the short and long path values then a timing violation occurred indicating a glitch check the seco_glitch_ckt_en also"}, {"vec": "sec_adm", "pat": "sec_adm_disable_crypto", "groups": "default_scu", "soc_arg": null, "user": "b48029", "priority": 0, "glv": null, "review": null, "desc": "Verify the Crypto Logic disable in the CAAM , 1 = IEE, 2 = HDCP, 3 - DTCP via the corresponding func_sec_lock"}, {"vec": "sec_adm", "pat": "sec_adm_seco_firmaware_disable", "groups": "default_scu", "soc_arg": null, "user": "b48029", "priority": 0, "glv": null, "review": null, "desc": "Verify the firmware disable of SECO and its inteneded functions , tbd"}, {"vec": "sec_adm", "pat": "sec_adm_dft_diasble", "groups": "default_scu", "soc_arg": null, "user": "b48029", "priority": 0, "glv": null, "review": null, "desc": "Verify the dft_diable setting dsiables the test fucntion for CAAM,IEE etc ,tbd"}, {"vec": "sec_adm", "pat": "sec_adm_sdp_disable", "groups": "default_scu", "soc_arg": null, "user": "b48029", "priority": 0, "glv": null, "review": null, "desc": "Verify the SDP port connection disable setting via func_Sec_lock ,tbd"}, {"vec": "sec_adm", "pat": "sec_adm_sdp_wo", "groups": "default_scu", "soc_arg": null, "user": "b48029", "priority": 0, "glv": null, "review": null, "desc": "Verify the sd_wo setting into ADM , tbd"}, {"vec": "sec_adm", "pat": "sec_adm_fuse_life_cycle", "groups": "default_scu", "soc_arg": null, "user": "b48029", "priority": 0, "glv": null, "review": null, "desc": "Verify fuse life cycle ,putting  a place holder case for now , however this would require a whole lot more cases to cover ,tbd"}, {"vec": "sec_adm", "pat": "sec_adm_otp_spares_niden_dis", "groups": "default_scu", "soc_arg": null, "user": "b48029", "priority": 0, "glv": null, "review": null, "desc": "Verify the OTP spare settings to  ADM that tcontrols the niden disable SCU and APPS"}, {"vec": "sec_adm", "pat": "sec_adm_otp_spares_spiden_dis", "groups": "default_scu", "soc_arg": null, "user": "b48029", "priority": 0, "glv": null, "review": null, "desc": "Verify the OTP spare settings to  ADM that tcontrols the spiden disable SCU and APPS"}, {"vec": "sec_adm", "pat": "sec_adm_otp_spares_spniden_dis", "groups": "default_scu", "soc_arg": null, "user": "b48029", "priority": 0, "glv": null, "review": null, "desc": "Verify the OTP spare settings to  ADM that tcontrols the spniden disable SCU and APPS"}, {"vec": "sec_adm", "pat": "sec_adm_otp_spares_dbgen_dis", "groups": "default_scu", "soc_arg": null, "user": "b48029", "priority": 0, "glv": null, "review": null, "desc": "Verify the OTP spare settings to  ADM that tcontrols the dbgen disable SCU and APPS,SECO etc"}, {"vec": "sec_adm", "pat": "sec_adm_jtag_active_secu_violn", "groups": "default_scu", "soc_arg": null, "user": "b48029", "priority": 0, "glv": null, "review": null, "desc": "Verify the when the jtag is active with out the debug enable setting ADM triggers a security violation to system"}, {"vec": "sec_adm", "pat": "sec_adm_dft_active_secu_violn", "groups": "default_scu", "soc_arg": null, "user": "b48029", "priority": 0, "glv": null, "review": null, "desc": "Verify when test port is active, but dft is not enabled  ADM triggers a security violation"}, {"vec": "sec_adm", "pat": "sec_adm_clk_out_range_secu_violn", "groups": "default_scu", "soc_arg": null, "user": "b48029", "priority": 0, "glv": null, "review": null, "desc": "Verify clk_freq is out of range and it's monitor value register field is set to 1 , trigger  a security violation"}, {"vec": "sec_adm", "pat": "sec_adm_temp_out_range_secu_violn", "groups": "default_scu", "soc_arg": null, "user": "b48029", "priority": 0, "glv": null, "review": null, "desc": "Verify temp is out of range and it's monitor value register field is set to 1 , trigger  a security violation"}, {"vec": "sec_adm", "pat": "sec_adm_volt_out_range_secu_violn", "groups": "default_scu", "soc_arg": null, "user": "b48029", "priority": 0, "glv": null, "review": null, "desc": "Verify voltage  is out of range and it's monitor value register field is set to 1 , trigger  a security violation"}, {"vec": "sec_adm", "pat": "sec_cm0p_lockup_secu_violn", "groups": "default_scu", "soc_arg": null, "user": "b48029", "priority": 0, "glv": null, "review": null, "desc": "Verify  cm0p lockup trigger  a security violation"}, {"vec": "sec_adm", "pat": "sec_cm0p_ecc_err_secu_violn", "groups": "default_scu", "soc_arg": null, "user": "b48029", "priority": 0, "glv": null, "review": null, "desc": "Verify  ecc err trigger  a security violation"}, {"vec": "sec_adm", "pat": "sec_dbg_tamper_secu_violn", "groups": "default_scu", "soc_arg": null, "user": "b48029", "priority": 0, "glv": null, "review": null, "desc": "Verify   dbg tamper trigger  a security violation"}, {"vec": "sec_adm", "pat": "sec_adm_otpmk_key_passthrough", "groups": "default_scu", "soc_arg": null, "user": "b48029", "priority": 0, "glv": null, "review": null, "desc": "Not sure of the fucntionality here why ADM involved ?"}, {"vec": "sec_adm", "pat": "sec_adm_hdcp_tx_global_const", "groups": "default_scu", "soc_arg": null, "user": "b48029", "priority": 0, "glv": null, "review": null, "desc": "Verify the OTP loading into ADM and reg accessany other fucntion ?"}, {"vec": "sec_adm", "pat": "sec_snvs_trim_settings", "groups": "default_scu", "soc_arg": null, "user": "b48029", "priority": 1, "glv": null, "review": null, "desc": "Verify the snvs trim , mostly snvs case,tbd"}, {"vec": "sec_adm", "pat": "sec_adm_kmek", "groups": "default_scu", "soc_arg": null, "user": "b48029", "priority": 0, "glv": null, "review": null, "desc": "Verify the OTP loading into ADM and reg accessany other fucntion ?"}, {"vec": "sec_adm", "pat": "sec_adm_gen_local_early_fuses_valid", "groups": "default_scu", "soc_arg": null, "user": "b48029", "priority": 0, "glv": null, "review": null, "desc": "Verify case you never get early fuses valid, this bit can be set to 1. It opens up dft, jtag, and releases the cores for normal operation."}, {"vec": "sec_adm", "pat": "sec_adm_ipt_fucntion", "groups": "default_scu", "soc_arg": null, "user": "b48029", "priority": 0, "glv": null, "review": null, "desc": "Verify the test mode fucntions via th ipt test interface ,tbd"}, {"vec": "sec_adm", "pat": "sec_adm_caam_repair_valiue", "groups": "default_scu", "soc_arg": null, "user": "b48029", "priority": 0, "glv": null, "review": null, "desc": "Verify ADM latches the CAAM repair value anc heck its assertion is qualified correctly with repair enable signal"}, {"vec": "sec_adm", "pat": "sec_adm_caam_reset_lpm_inhibit", "groups": "default_scu", "soc_arg": null, "user": "b48029", "priority": 0, "glv": null, "review": null, "desc": "Verify the If inhibit LPM is set, Caam resetn is ignored and CAAM is not allowed to reset."}, {"vec": "sec_adm", "pat": "sec_adm_caam_pwrctrl_lpm_inhibit", "groups": "default_scu", "soc_arg": null, "user": "b48029", "priority": 0, "glv": null, "review": null, "desc": "Verify If inhibit LPM is set, caam pwr ctlr  is ignored and and the always on values from the shared register bus is sent to the CAAM."}, {"vec": "sec_adm", "pat": "sec_adm_snvs_fail_state", "groups": "default_scu", "soc_arg": null, "user": "b48029", "priority": 0, "glv": null, "review": null, "desc": "Verify SNVS fails state implications at ADM like clear reg banks , clear keys etc"}, {"vec": "sec_adm", "pat": "sec_adm_snvs_secure_sate", "groups": "default_scu", "soc_arg": null, "user": "b48029", "priority": 1, "glv": null, "review": null, "desc": "Verify the SNVS secure state implications for the Key Loading state machine switch"}, {"vec": "sec_adm", "pat": "sec_adm_lpm_inhibit", "groups": "default_scu", "soc_arg": null, "user": "b48029", "priority": 0, "glv": null, "review": null, "desc": "Verify the LPM inhibit setting which inhibits the LPC entry into low-power mode. low pwer plus security"}, {"vec": "sec_adm", "pat": "sec_adm_xrdc_did", "groups": "default_scu", "soc_arg": null, "user": "b48029", "priority": 0, "glv": null, "review": null, "desc": "tbd"}], "scu_sec_mu": [{"vec": "scu_sec_mu", "pat": "scu_sec_mu_access", "groups": "default_scu", "soc_arg": null, "user": "b48029", "priority": 0, "glv": null, "review": null, "desc": "Access to the all Mailbox instances ( from SCU Side) in Security SS"}, {"vec": "scu_sec_mu", "pat": "scu_sec_sec1_mcu_mu_int", "groups": "default_scu", "soc_arg": null, "user": "b48029", "priority": 0, "glv": null, "review": null, "desc": "Mailbox Interrupt Assertions and Data Transfer"}, {"vec": "scu_sec_mu", "pat": "scu_sec_mu_ssi_lpbk_access", "groups": "default_scu", "soc_arg": null, "user": "b48029", "priority": 0, "glv": null, "review": null, "desc": "Mailbox  Message passing between local and remote core"}, {"vec": "scu_sec_mu", "pat": "scu_sec_mu_ssi_lpbk_access_freq_switch", "groups": "default_scu", "soc_arg": null, "user": "b48029", "priority": 0, "glv": null, "review": null, "desc": "Mailbox  Message passing between local and remote core with freq switch"}, {"vec": "scu_sec_mu", "pat": "scu_sec_sec2_mcu_mu_int", "groups": "default_scu", "soc_arg": null, "user": "b48029", "priority": 0, "glv": null, "review": null, "desc": "Mailbox Interrupt  Assertions and Data Transfer"}, {"vec": "scu_sec_mu", "pat": "scu_sec_sec3_mcu_mu_int", "groups": "default_scu", "soc_arg": null, "user": "b48029", "priority": 0, "glv": null, "review": null, "desc": "Mailbox Interrupt  Assertions and Data Transfer"}], "sec_hdmi_tx": [{"vec": "sec_hdmi_tx", "pat": "sec_hdmitx_apbmux_sel", "groups": "default_dc", "soc_arg": null, "user": "b54489", "priority": 0, "glv": null, "review": null, "desc": "Check that apbmux sel is functional, access hdmi ram with Seco"}, {"vec": "sec_hdmi_tx", "pat": "sec_hdmitx_secure_mode", "groups": "default_dc", "soc_arg": null, "user": "b54489", "priority": 0, "glv": null, "review": null, "desc": "Check secure mode feature"}, {"vec": "sec_hdmi_tx", "pat": "sec_hdmitx_send_keys", "groups": "default_dc", "soc_arg": null, "user": "b54489", "priority": 0, "glv": null, "review": null, "desc": "Check that SECO is able to write keys to HDMI controller mailbox. Need to check all kind of keys"}, {"vec": "sec_hdmi_tx", "pat": "sec_hdmitx_security_violation", "groups": "default_dc", "soc_arg": null, "user": "b54489", "priority": 0, "glv": null, "review": null, "desc": "Check that HDMI is impacted when security violation occurred. Fail state should reset the HDMI controller which erases keys. SECO to zeroize after reset"}, {"vec": "sec_hdmi_tx", "pat": "sec_hdmitx_keys_lock_down", "groups": "default_dc", "soc_arg": null, "user": "b54489", "priority": 0, "glv": null, "review": null, "desc": "Prevent modification by other software in the chip. "}, {"vec": "sec_hdmi_tx", "pat": "sec_hdmitx_disable_crypto_by_fuse", "groups": "default_dc", "soc_arg": null, "user": "b54489", "priority": 0, "glv": null, "review": null, "desc": "check disable crypto impacto (by fuse)"}, {"vec": "sec_hdmi_tx", "pat": "sec_hdmitx_disable_crypto_by_sw", "groups": "default_dc", "soc_arg": null, "user": "b54489", "priority": 0, "glv": null, "review": null, "desc": "check disable crypto impacto (by sw). TO CONFIRM"}, {"vec": "sec_hdmi_tx", "pat": "sec_hdmitx_boot_process", "groups": "default_dc", "soc_arg": null, "user": "b54489", "priority": 1, "glv": null, "review": null, "desc": "Check all boot process steps"}], "scu_sec_snvs": [{"vec": "scu_sec_snvs", "pat": "scu_snvs_reg_reset", "groups": "default_scu", "soc_arg": null, "user": "b54489", "priority": 0, "glv": null, "review": null, "desc": "Register reset test from SCU. "}, {"vec": "scu_sec_snvs", "pat": "seco_snvs_reg_reset", "groups": "default_scu", "soc_arg": null, "user": "b54489", "priority": 0, "glv": null, "review": null, "desc": "Register reset test from SECO."}, {"vec": "scu_sec_snvs", "pat": "scu_snvs_reg_rw", "groups": "default_scu", "soc_arg": null, "user": "b54489", "priority": 0, "glv": null, "review": null, "desc": "Register test from SCU. R/W in registers. "}, {"vec": "scu_sec_snvs", "pat": "seco_snvs_reg_rw", "groups": "default_scu", "soc_arg": null, "user": "b54489", "priority": 0, "glv": null, "review": null, "desc": "Register test from SECO. R/W in registers. "}, {"vec": "scu_sec_snvs", "pat": "scu_snvs_reg_illegal_access", "groups": "default_scu", "soc_arg": null, "user": "b54489", "priority": 0, "glv": null, "review": null, "desc": "Register test from SCU. R/W in registers. "}, {"vec": "scu_sec_snvs", "pat": "seco_snvs_reg_illegal_access", "groups": "default_scu", "soc_arg": null, "user": "b54489", "priority": 0, "glv": null, "review": null, "desc": "Register test from SECO. R/W in registers. "}, {"vec": "scu_sec_snvs", "pat": "scu_snvs_reg_non_priv_access", "groups": "default_scu", "soc_arg": null, "user": "b54489", "priority": 0, "glv": null, "review": null, "desc": "Register test from SCU. Check ips_privilege_access signal"}, {"vec": "scu_sec_snvs", "pat": "scu_snvs_int_hp_btn", "groups": "default_scu", "soc_arg": null, "user": "b54489", "priority": 0, "glv": null, "review": null, "desc": "Indicates the btn was pressed to SCU"}, {"vec": "scu_sec_snvs", "pat": "seco_snvs_int_hp_btn", "groups": "default_scu", "soc_arg": null, "user": "b54489", "priority": 0, "glv": null, "review": null, "desc": "Indicates the btn was pressed to SECO"}, {"vec": "scu_sec_snvs", "pat": "scu_snvs_int_hp_periodic", "groups": "default_scu", "soc_arg": null, "user": "b54489", "priority": 0, "glv": null, "review": null, "desc": "Check PERIODIC INT - Reused from ULP1"}, {"vec": "scu_sec_snvs", "pat": "seco_snvs_int_hp_periodic", "groups": "default_scu", "soc_arg": null, "user": "b54489", "priority": 0, "glv": null, "review": null, "desc": "Check PERIODIC INT - Reused from ULP1"}, {"vec": "scu_sec_snvs", "pat": "scu_snvs_int_hp_func", "groups": "default_scu", "soc_arg": null, "user": "b54489", "priority": 0, "glv": null, "review": null, "desc": "Use time alarm testcase to check SCU/FUNC_INT as time alarm is one of the source of this IRQ"}, {"vec": "scu_sec_snvs", "pat": "seco_snvs_int_hp_func", "groups": "default_scu", "soc_arg": null, "user": "b54489", "priority": 0, "glv": null, "review": null, "desc": "Use time alarm testcase to check SECO/FUNC_INT as time alarm is one of the source of this IRQ"}, {"vec": "scu_sec_snvs", "pat": "scu_snvs_int_lp_alarm", "groups": "default_scu", "soc_arg": null, "user": "b54489", "priority": 0, "glv": null, "review": null, "desc": "Check lp alarm can be set to SCU. Need to have power_down ??"}, {"vec": "scu_sec_snvs", "pat": "seco_snvs_int_lp_alarm", "groups": "default_scu", "soc_arg": null, "user": "b54489", "priority": 0, "glv": null, "review": null, "desc": "Check lp alarm can be set to SECO. Need to have power_down ??"}, {"vec": "scu_sec_snvs", "pat": "scu_snvs_int_lp_set_pwr_off", "groups": "default_scu", "soc_arg": null, "user": "b54489", "priority": 0, "glv": null, "review": null, "desc": "PWR_OFF IRQ is set. PMIC_ON_REQ has been set. Speed the 32kHz"}, {"vec": "scu_sec_snvs", "pat": "seco_snvs_int_lp_set_pwr_off", "groups": "default_scu", "soc_arg": null, "user": "b54489", "priority": 0, "glv": null, "review": null, "desc": "PWR_OFF IRQ is set. PMIC_ON_REQ has been set. Speed the 32kHz"}, {"vec": "scu_sec_snvs", "pat": "seco_snvs_hp_gen_wdg_sec_vio", "groups": "default_scu", "soc_arg": null, "user": "b54489", "priority": 0, "glv": null, "review": null, "desc": "Security violation to SCU/SECO from wdg"}, {"vec": "scu_sec_snvs", "pat": "scu_snvs_sec_vio_jtag_int", "groups": "default_scu", "soc_arg": null, "user": "b54489", "priority": 0, "glv": null, "review": null, "desc": "Security violation to SCU from jtag. Included into ADM. TOREMOVE"}, {"vec": "scu_sec_snvs", "pat": "scu_snvs_sec_vio_adm_int", "groups": "default_scu", "soc_arg": null, "user": "b54489", "priority": 0, "glv": null, "review": null, "desc": "Security violation to SCU from ADM. Several possibilities are existing. Already covered by other tcs. TOREMOVE"}, {"vec": "scu_sec_snvs", "pat": "seco_snvs_hp_gen_adm_volt_sec_vio", "groups": "default_scu", "soc_arg": null, "user": "b54489", "priority": 0, "glv": null, "review": null, "desc": "Create a voltage out of range violation. Use a trigger to emulation SNVS_ANA"}, {"vec": "scu_sec_snvs", "pat": "seco_snvs_hp_gen_adm_temp_sec_vio", "groups": "default_scu", "soc_arg": null, "user": "b54489", "priority": 0, "glv": null, "review": null, "desc": "Create a temperature out of range violation. Use a trigger to emulation SNVS_ANA"}, {"vec": "scu_sec_snvs", "pat": "seco_snvs_hp_gen_adm_clk_sec_vio", "groups": "default_scu", "soc_arg": null, "user": "b54489", "priority": 0, "glv": null, "review": null, "desc": "Create a clock out of range violation"}, {"vec": "scu_sec_snvs", "pat": "seco_snvs_lp_gen_sw_sec_vio", "groups": "default_scu", "soc_arg": null, "user": "b54489", "priority": 0, "glv": null, "review": null, "desc": "Software violation. Check that ssm beh is correct, CAAM is non-secure, zmk is zeroized"}, {"vec": "scu_sec_snvs", "pat": "scu_snvs_hp_gen_sw_sec_vio", "groups": "default_scu", "soc_arg": null, "user": "b54489", "priority": 0, "glv": null, "review": null, "desc": "Security violation to SECO using HAC. Non-fatal. Use SCU to facilitate system reset"}, {"vec": "scu_sec_snvs", "pat": "seco_snvs_hp_gen_sw_fatal_sec_vio", "groups": "default_scu", "soc_arg": null, "user": "b54489", "priority": 0, "glv": null, "review": null, "desc": "Fatal security violation to SECO using HAC. Check hard_reset is asserted. "}, {"vec": "scu_sec_snvs", "pat": "scu_snvs_lp_gen_monotonic_cnt_vio", "groups": "default_scu", "soc_arg": null, "user": "b54489", "priority": 0, "glv": null, "review": null, "desc": "check monotonic feature. Generate a secure violation"}, {"vec": "scu_sec_snvs", "pat": "seco_snvs_lp_lock_reg", "groups": "default_scu", "soc_arg": null, "user": "b54489", "priority": 0, "glv": null, "review": null, "desc": "verify lock connection between SNVS_lp and SNVS_HP. Check soft reset connectionas well  - Reused from ULP1"}, {"vec": "scu_sec_snvs", "pat": "scu_snvs_hp_lock_reg", "groups": "default_scu", "soc_arg": null, "user": "b54489", "priority": 0, "glv": null, "review": null, "desc": "verify lock connection between SNVS_lp and SNVS_HP"}, {"vec": "scu_sec_snvs", "pat": "seco_snvs_lp_at_lock_reg", "groups": "default_scu", "soc_arg": null, "user": "b54489", "priority": 0, "glv": null, "review": null, "desc": "check active tampers lock feature using lp lock - Reused from ULP1"}, {"vec": "scu_sec_snvs", "pat": "scu_snvs_hp_at_lock_reg", "groups": "default_scu", "soc_arg": null, "user": "b54489", "priority": 0, "glv": null, "review": null, "desc": "check active tampers lock connection between SNVS_HP and SNVS_LP"}, {"vec": "scu_sec_snvs", "pat": "scu_snvs_lp_trim_csr", "groups": "default_scu", "soc_arg": null, "user": "b54489", "priority": 0, "glv": null, "review": null, "desc": "Check CSR registers path."}, {"vec": "scu_sec_snvs", "pat": "seco_snvs_lp_trim_csr", "groups": "default_scu", "soc_arg": null, "user": "b54489", "priority": 0, "glv": null, "review": null, "desc": "Check CSR registers path"}, {"vec": "scu_sec_snvs", "pat": "seco_snvs_lp_trim_sw_sel", "groups": "default_scu", "soc_arg": null, "user": "b54489", "priority": 0, "glv": null, "review": null, "desc": "Check that sw sel between fuses and soft values is possible.  Need to check LOCK feature in SNVS_LP"}, {"vec": "scu_sec_snvs", "pat": "seco_snvs_lp_trim_shelf_mode", "groups": "default_scu", "soc_arg": null, "user": "b54489", "priority": 1, "glv": null, "review": null, "desc": "Check shelf mode depending of the fuse value. Non-operation mode"}, {"vec": "scu_sec_snvs", "pat": "scu_snvs_lp_trim_test_mode", "groups": "default_scu", "soc_arg": null, "user": "b54489", "priority": 1, "glv": null, "review": null, "desc": "Check that test mode signals are correctly connected from CSR to SNVS_ANA"}, {"vec": "scu_sec_snvs", "pat": "scu_snvs_tamper_external1_fail", "groups": "default_scu", "soc_arg": null, "user": "b54489", "priority": 0, "glv": null, "review": null, "desc": "Go in fail mode using SNVS_SNVS_TAMPER_IN_00"}, {"vec": "scu_sec_snvs", "pat": "scu_snvs_tamper_external2_fail", "groups": "default_scu", "soc_arg": null, "user": "b54489", "priority": 0, "glv": null, "review": null, "desc": "Go in fail mode using SNVS_SNVS_TAMPER_IN_00"}, {"vec": "scu_sec_snvs", "pat": "scu_snvs_tamper_external3_fail", "groups": "default_scu", "soc_arg": null, "user": "b54489", "priority": 0, "glv": null, "review": null, "desc": "SNVS_SNVS_TAMPER_OUT_00 is supposed to be configured as passive"}, {"vec": "scu_sec_snvs", "pat": "scu_snvs_tamper_external4_fail", "groups": "default_scu", "soc_arg": null, "user": "b54489", "priority": 0, "glv": null, "review": null, "desc": "SNVS_SNVS_TAMPER_OUT_01 is supposed to be configured as passive"}, {"vec": "scu_sec_snvs", "pat": "scu_snvs_tamper_active1_fail", "groups": "default_scu", "soc_arg": null, "user": "b54489", "priority": 0, "glv": null, "review": null, "desc": "SNVS_SNVS_TAMPER_OUT_00 is supposed to be configured as active"}, {"vec": "scu_sec_snvs", "pat": "scu_snvs_tamper_active2_fail", "groups": "default_scu", "soc_arg": null, "user": "b54489", "priority": 0, "glv": null, "review": null, "desc": "SNVS_SNVS_TAMPER_OUT_01 is supposed to be configured as active"}, {"vec": "scu_sec_snvs", "pat": "snvs_ssm_check_states", "groups": "default_scu", "soc_arg": null, "user": "b54489", "priority": 1, "glv": null, "review": null, "desc": "Transition between all ssm state. Optional? Fuse impact"}, {"vec": "scu_sec_snvs", "pat": "seco_snvs_security_cfg_closed", "groups": "default_scu", "soc_arg": null, "user": "b54489", "priority": 0, "glv": null, "review": null, "desc": "Fab config connection"}, {"vec": "scu_sec_snvs", "pat": "seco_snvs_security_cfg_opened", "groups": "default_scu", "soc_arg": null, "user": "b54489", "priority": 0, "glv": null, "review": null, "desc": "Fab config connection"}, {"vec": "scu_sec_snvs", "pat": "seco_snvs_security_cfg_field_return", "groups": "default_scu", "soc_arg": null, "user": "b54489", "priority": 0, "glv": null, "review": null, "desc": "Fab config connection"}, {"vec": "scu_sec_snvs", "pat": "seco_snvs_pmic_power_off_by_reg", "groups": "default_scu", "soc_arg": null, "user": "b54489", "priority": 0, "glv": null, "review": null, "desc": "PMIC - SNVS connections"}, {"vec": "scu_sec_snvs", "pat": "snvs_power_glitch_detector", "groups": "default_scu", "soc_arg": null, "user": "b54489", "priority": 2, "glv": null, "review": null, "desc": "how to do that??? What could be a SoC level usecase"}, {"vec": "scu_sec_snvs", "pat": "snvs_volt_violation_detector", "groups": "default_scu", "soc_arg": null, "user": "b54489", "priority": 2, "glv": null, "review": null, "desc": "how to do that???  Use behavioral model?"}, {"vec": "scu_sec_snvs", "pat": "snvs_clk_violation_detector", "groups": "default_scu", "soc_arg": null, "user": "b54489", "priority": 2, "glv": null, "review": null, "desc": "how to do that???  Use behavioral model?"}, {"vec": "scu_sec_snvs", "pat": "snvs_temp_violation_detector", "groups": "default_scu", "soc_arg": null, "user": "b54489", "priority": 2, "glv": null, "review": null, "desc": "how to do that???  Use behavioral model?"}, {"vec": "scu_sec_snvs", "pat": "seco_snvs_fuse_volt_mon_disable", "groups": "default_scu", "soc_arg": null, "user": "b54489", "priority": 1, "glv": null, "review": null, "desc": "check connection from fuse to SNVS_LP. No functional testcase has we don't have RTL model"}, {"vec": "scu_sec_snvs", "pat": "seco_snvs_fuse_temp_mon_disable", "groups": "default_scu", "soc_arg": null, "user": "b54489", "priority": 1, "glv": null, "review": null, "desc": "check connection from fuse to SNVS_LP. No functional testcase has we don't have RTL model"}, {"vec": "scu_sec_snvs", "pat": "seco_snvs_fuse_clk_mon_disable", "groups": "default_scu", "soc_arg": null, "user": "b54489", "priority": 1, "glv": null, "review": null, "desc": "check connection from fuse to SNVS_LP and check expected behavior"}, {"vec": "scu_sec_snvs", "pat": "scu_snvs_fuse_mc_era", "groups": "default_scu", "soc_arg": null, "user": "b54489", "priority": 1, "glv": null, "review": null, "desc": "check mc_era fuse - Reused from ULP1"}, {"vec": "scu_sec_snvs", "pat": "snvs_stop", "groups": "default_scu", "soc_arg": null, "user": "b54489", "priority": 1, "glv": null, "review": null, "desc": "Stop mode. Use for lowpower"}], "scu_sec_int": [{"vec": "scu_sec_int", "pat": "sec_cm0_sys_reset_dsc_int", "groups": "default_scu", "soc_arg": null, "user": "b48029", "priority": 0, "glv": null, "review": null, "desc": "M0 core software request going to DSC as SS_INT , M4 initiates a Warm reset to DSC"}, {"vec": "scu_sec_int", "pat": "sec_cm0_lockup_dsc_int", "groups": "default_scu", "soc_arg": null, "user": "b48029", "priority": 0, "glv": null, "review": null, "desc": "M0 lockup when there is an excetion inside an exception handler , core uses reset/NMI to exit lockup"}, {"vec": "scu_sec_int", "pat": "sec_axbs_stall_ack_dsc_int", "groups": "default_scu", "soc_arg": null, "user": "b48029", "priority": 0, "glv": null, "review": null, "desc": "M0 AXBS Fabric Xaction stall request from  DSC and Ack to stall the xactons"}, {"vec": "scu_sec_int", "pat": "sec_cm0_deepsleep_dscint", "groups": "default_scu", "soc_arg": null, "user": "b48029", "priority": 0, "glv": null, "review": null, "desc": "M0 Clock Gated sleep state IRQ to DSC of SCU"}]}